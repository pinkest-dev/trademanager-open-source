import react, { FC, useContext, useState } from 'react';
import Field from '../../../../electron/interfaces/TableFields/Field';
import Context from '../Context';
import { observer } from 'mobx-react';
import ReactTooltip from 'react-tooltip';
import uuid from 'react-uuid';
import AvalibleFieldTypes from '../../../../electron/interfaces/TableFields/AvalibleFieldTypes';

const BasicTextField: FC<{ field: Field }> = (props) => {
    const { field } = props;
    const tableProps = useContext(Context);
    const altText = getAltText(field);
    const uniqueId = uuid();

    return (
        <div data-tip="React-tooltip" data-for={uniqueId} style={{ cursor: 'pointer', userSelect: 'none' }} onClick={() => {
            if (tableProps && tableProps.onSort) tableProps.onSort(field.type, field.sortDirection === 'UP' ? 'DOWN' : 'UP');
        }}>
            {uniqueId ? <ReactTooltip place="top" type="dark" effect="float" id={uniqueId}>
                <span>{altText}</span>
            </ReactTooltip> : <></>}
            {field.showTtitleInTable ? field.title : ""}
            {field.isSortable ? (field.sortDirection === 'UP' ? '‚Üë' : '‚Üì') : ""}
        </div>
    );
};

const getAltText = (field: Field) => {
    switch (field.type) {
        case AvalibleFieldTypes.linkedProxies:
            return <div className='alt-text-container'>–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Å —ç—Ç–∏–º Steam –∞–∫–∫–∞—É–Ω—Ç–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏</div>
        case AvalibleFieldTypes.steamAccountName:
            return <div className='alt-text-container'>–≠—Ç–æ –ª–æ–≥–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤–≤–æ–¥–∏—Ç–µ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ Steam</div>
        case AvalibleFieldTypes.steamPassword:
            return <div className='alt-text-container'>–ü–∞—Ä–æ–ª—å –æ—Ç Steam –∞–∫–∫–∞—É–Ω—Ç–∞ (—á—Ç–æ —Ç—É—Ç –µ—â–µ –º–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å???üôÑ)</div>
        case AvalibleFieldTypes.steamAccountLevel:
            return <div className='alt-text-container'>–í–∞—à —É—Ä–æ–≤–µ–Ω—å Steam</div>
        case AvalibleFieldTypes.tradeState:
            return <div className='alt-text-container'>–ú–æ–∂–µ—Ç –ª–∏ –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç—Ä–µ–π–¥—ã</div>
        case AvalibleFieldTypes.tpState:
            return <div className='alt-text-container'>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ —Ç–æ—Ä–≥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞</div>
        case AvalibleFieldTypes.ktState:
            return <div className='alt-text-container'>–°—Ç–∞—Ç—É—Å –∫—Ä–∞—Å–Ω–æ–π —Ç–∞–±–ª–∏—á–∫–∏ –≤ Steam. –£–ø–æ—Å–∏ –≥–æ—Å–ø–æ–¥—å —É–≤–∏–¥–µ—Ç—å –∑–¥–µ—Å—å —á—Ç–æ-—Ç–æ –æ—Ç–ª–∏—á–Ω–æ–µ –æ—Ç —Å–ª–æ–≤–∞ –û–ö üòà</div>
        case AvalibleFieldTypes.steamAccountBalance:
            return <div className='alt-text-container'>–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –±–∞–ª–∞–Ω—Å—ã Steamüòô. –ß—Ç–æ –µ—â–µ —Å–∫–∞–∑–∞—Ç—å?</div>
        case AvalibleFieldTypes.csgoTmBalance:
            return <div className='alt-text-container'>–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –±–∞–ª–∞–Ω—Å—ã –≤–∞—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–∞—Ö –Ω–∞ —Å–∞–π—Ç–µ https://market.csgo.com. –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å api –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö</div>
        case AvalibleFieldTypes.number:
            return <div className='alt-text-container'>–≠—Ç–æ –Ω–æ–º–µ—Ä –≤ —Å–∏—Å—Ç–µ–º–µ. –ï–≥–æ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å. –ü–æ —Å—É—Ç–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä–∞ –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã</div>
        case AvalibleFieldTypes.steamAccountNickname:
            return <div className='alt-text-container'>–¢—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–∏–∫–Ω–µ–π–º—ã –∏–∑ Steam (–∏–∑ –ø—Ä–æ—Ñ–∏–ª—è)</div>;
        case AvalibleFieldTypes.tmApiKey:
            return <div className='alt-text-container'>Api –∫–ª—é—á –æ—Ç —Å–∞–π—Ç–∞ https://market.csgo.com –ù—É–∂–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –æ—Ç—Ç—É–¥–∞. –ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å –º–∞—Ä–∫–µ—Ç–æ–º, —Ç–æ –≤–ø–æ–ª–Ω–µ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —ç—Ç–æ –ø–æ–ª–µ –ø—É—Å—Ç—ã–º</div>;

        case AvalibleFieldTypes.proxyHost:
            return <div className='alt-text-container'>–¢—É—Ç —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è —Ö–æ—Å—Ç—ã –ø—Ä–æ–∫—Å–∏. –≠—Ç–æ —á–∞—Å—Ç—å ip –∞–¥—Ä–µ—Å–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: 123.123.123.123</div>;
        case AvalibleFieldTypes.proxyPort:
            return <div className='alt-text-container'>–¢—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø–æ—Ä—Ç—ã –ø—Ä–æ–∫—Å–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: 30013</div>;
        case AvalibleFieldTypes.proxyUsername:
            return <div className='alt-text-container'>–¢—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ª–æ–≥–∏–Ω—ã –æ—Ç –≤–∞—à–∏—Ö –ø—Ä–æ–∫—Å–∏</div>;
        case AvalibleFieldTypes.proxyPassword:
            return <div className='alt-text-container'>–¢—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø–∞—Ä–æ–ª–∏ –æ—Ç –≤–∞—à–∏—Ö –ø—Ä–æ–∫—Å–∏</div>;
        case AvalibleFieldTypes.linkedSteamAccounts:
            return <div className='alt-text-container'>–¢—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–æ–º–µ—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∫ –¥–∞–Ω–Ω–æ–º—É –ø—Ä–æ–∫—Å–∏. (–ö–∞–∂–¥—ã–π –∞–∫–∫–∞—É–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏)</div>;
        case AvalibleFieldTypes.linkedProfiles:
            return <div className='alt-text-container'>–¢—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–æ–º–µ—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –∫ –¥–∞–Ω–Ω–æ–º—É –ø—Ä–æ–∫—Å–∏ (–ö–∞–∂–¥—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏)</div>;
    }
    return "";
}

export default BasicTextField;